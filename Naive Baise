{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"15iyVT-1V224mzA0DU6xd2IPNZJJsU-uZ","authorship_tag":"ABX9TyPm9Pou1l5/7vapuE6Ktwkh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from imblearn.over_sampling import SMOTE\n","from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report, accuracy_score, confusion_matrix\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.naive_bayes import MultinomialNB, GaussianNB\n","from google.colab import drive"],"metadata":{"id":"jBFrZBDbDUrF","executionInfo":{"status":"ok","timestamp":1718776354851,"user_tz":-330,"elapsed":5152,"user":{"displayName":"Sohan","userId":"00013129391305470303"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0zbYm2M8E6IN","executionInfo":{"status":"ok","timestamp":1718776781634,"user_tz":-330,"elapsed":44155,"user":{"displayName":"Sohan","userId":"00013129391305470303"}},"outputId":"166f6586-87aa-4f84-b635-aec53f4a2ccc"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["# Load the dataset\n","df = pd.read_csv('/content/augmented_dataset1.csv')\n","df = df[['Text data', 'Label']]\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"CokDkcKnDbGO","executionInfo":{"status":"ok","timestamp":1718776786722,"user_tz":-330,"elapsed":697,"user":{"displayName":"Sohan","userId":"00013129391305470303"}},"outputId":"fb9f67a2-f4b6-46e2-9d98-94a224efdb68"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                           Text data  Label\n","0  waiting for my mind to have breakdown once the...      1\n","1  for my new anymore little bit not of just and ...      1\n","2  new year feeling there else depressed last eve...      1\n","3  for my to have the new feeling know about anyo...      1\n","4  to the new year in start and into great myself...      1"],"text/html":["\n","  <div id=\"df-94d5f45f-7022-4e7c-aa6a-4ac95e7f1cf0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Text data</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>waiting for my mind to have breakdown once the...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>for my new anymore little bit not of just and ...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>new year feeling there else depressed last eve...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>for my to have the new feeling know about anyo...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>to the new year in start and into great myself...</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94d5f45f-7022-4e7c-aa6a-4ac95e7f1cf0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-94d5f45f-7022-4e7c-aa6a-4ac95e7f1cf0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-94d5f45f-7022-4e7c-aa6a-4ac95e7f1cf0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e4edfec7-a4bf-48a5-b295-ba0f89c05c5a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e4edfec7-a4bf-48a5-b295-ba0f89c05c5a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e4edfec7-a4bf-48a5-b295-ba0f89c05c5a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 22546,\n  \"fields\": [\n    {\n      \"column\": \"Text data\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5458,\n        \"samples\": [\n          \"to the new year time of and is one good first us today book write refresh page reset blank\",\n          \"generalised necesarilly underestimatedand everythingthat cessation repercussions consoled unlivable missunderestood linger journeychance pragmaticand sideto limitedyou neuroplastictyyou unknowing statementand dmt lsdpsylocibin historical cultures painfrom philosophydont skewed meanthe killedit revert informations happinesis baseline hedonic axiomas evolutionary adaptif superpowers conplexity achievedthrough surive rearange dowe trackrecord outsolely alongthinking exprctation differentdestroying strategy tails toss deatha effortceasers calibrated pessimisticarguably realism stimulicoupled percieve goodand evolving advantageous striving advancing evolutionarily purposethat dopaminergic neuroplasticitylearn computed worldview pragmatic correctits todont mindor perceptions radically parentchildfriend terrorized peoplewho cerebral thinkingthis extracted happyif allyou outcomeor fullfilled whim tableof bread joust worldpeople powers bornyou unrealisticyou existance underestand stoicism matterbut linear fingertipspsychedelics timesall theese musicother peacefull sensationsthe spectrum qualitythis expectancylife havethe historically existbecoming laws locke goldy rarer billions link unbroken existto loveor sunsetto friendto unscrutonized livesif relative unconsciously conparisonusually component esteems workthile behaviourso considerations overcrowding afforfable immortality technological consciousnessin outlive legacy obtained sources article storm psychological shaped illusions closing manifests flood solutions achieveing vibe consume abyss coin worlds wishful identity ruminating roles examples attaching inhibit driven psychologically perception embrace behaviour water influenced survival circuit existential conditions responsibility sight built theory reaching million managing discipline achievements result intense speaking glass action king context luxury form knowledge cat release fully position string encourage episodes occupy psychology allow believing goal physics resilience main expectations accepting previous option aside free complete power extended fast shoulders periods history meaning youve extract realistic choose fire promise existence lottery cold wrote focus set religion waste seen correct universe cool purpose whatever happens win period experiences works etc system species limits advice effort brain throw course row joy victim low forever emotions brings toward remain thrown achieved suicide human studied optimistic high shouldnt circumstances biggest guilty others must stronger longer hot rest matter negative behind happiness such short study problems chance realise light depressive anyway accept mean place came crazy important should both keep their itll busy world far use havent kill thoughts reality times videos drink well each sense die an makes pleasure learn try rare need order keeps positive found death most take really much other possible own deal work off almost suffering which day spent through first our energy every different constant left long especially live how very alive make hard isnt when going than probably end wont better point what nice are myself did good by change ever worth pain could wish after said except bad doesnt everything has them social more out at leaving always person people cant since things never depression some doing best old life only wrong anything do self from thats on be will like want shit this then even become if get gonna resolution years feel it just was where same not tried something or time being back but else about there feeling my waiting surround bastard mouth chances cowards thoughtless mirror ahead chose yourself pure ramblings youre second theres run hurt looking were ones themselves nothing everyone see as we its had listen you can cause one no so your because all is with and of in go that the have to for\",\n          \"for my mind to have the don but go back in few not of was just it and feel get if this shit want because so do been me without family can head scared out am could had months nearly better future job going around hard as despite see fuck week every before away turned hell day suffering off work losing makes help may tomorrow stop god half weeks coming home thoughts kill sick damn world house keep past holy fucking forward hoping break barely during suicide lose holidays extreme sort early near motherfucker bullet bittersweet clinics admitting\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Label\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(df['Text data'], df['Label'], test_size=0.2, random_state=42)"],"metadata":{"id":"USLad8KcEhdt","executionInfo":{"status":"ok","timestamp":1718776787327,"user_tz":-330,"elapsed":2,"user":{"displayName":"Sohan","userId":"00013129391305470303"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["# TF-IDF Vectorization\n","tfidf_vectorizer = TfidfVectorizer()\n","X_train_tfidf = tfidf_vectorizer.fit_transform(X_train)\n","X_test_tfidf = tfidf_vectorizer.transform(X_test)"],"metadata":{"id":"mP7IlsFIEkUT","executionInfo":{"status":"ok","timestamp":1718776790047,"user_tz":-330,"elapsed":2722,"user":{"displayName":"Sohan","userId":"00013129391305470303"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# Count Vectorization\n","count_vectorizer = CountVectorizer()\n","X_train_count = count_vectorizer.fit_transform(X_train)\n","X_test_count = count_vectorizer.transform(X_test)"],"metadata":{"id":"c9b_FHu2EmuM","executionInfo":{"status":"ok","timestamp":1718776795254,"user_tz":-330,"elapsed":5209,"user":{"displayName":"Sohan","userId":"00013129391305470303"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# Load pre-trained GloVe embeddings\n","glove_file = '/content/glove.6B.100d.txt'\n","word_vectors = {}\n","with open(glove_file, 'r', encoding='utf-8') as f:\n","    for line in f:\n","        values = line.split()\n","        word = values[0]\n","        vector = np.array(values[1:], dtype='float32')\n","        word_vectors[word] = vector"],"metadata":{"id":"P0pRlmLxEqVR","executionInfo":{"status":"ok","timestamp":1718777434360,"user_tz":-330,"elapsed":2027,"user":{"displayName":"Sohan","userId":"00013129391305470303"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["# Define a function to map words to GloVe embeddings\n","def map_word_to_glove(word):\n","    return word_vectors.get(word, np.zeros(100))"],"metadata":{"id":"TwUj1CUBEurv","executionInfo":{"status":"ok","timestamp":1718777435088,"user_tz":-330,"elapsed":2,"user":{"displayName":"Sohan","userId":"00013129391305470303"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["# Create document embeddings\n","def create_document_embedding(doc):\n","    words = doc.split()\n","    word_embeddings = [map_word_to_glove(word) for word in words]\n","    doc_embedding = np.mean(word_embeddings, axis=0)  # Average word embeddings\n","    return doc_embedding"],"metadata":{"id":"srUzS9pPFWCJ","executionInfo":{"status":"ok","timestamp":1718777438501,"user_tz":-330,"elapsed":3,"user":{"displayName":"Sohan","userId":"00013129391305470303"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# Create document embeddings for training and testing data\n","X_train_glove = np.array([create_document_embedding(doc) for doc in X_train])\n","X_test_glove = np.array([create_document_embedding(doc) for doc in X_test])"],"metadata":{"id":"9IOTB4ciFarO","executionInfo":{"status":"ok","timestamp":1718777449362,"user_tz":-330,"elapsed":8325,"user":{"displayName":"Sohan","userId":"00013129391305470303"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# Train Naive Bayes Models\n","nb_tfidf = MultinomialNB()\n","nb_count = MultinomialNB()\n","nb_glove = GaussianNB()\n","\n","nb_tfidf.fit(X_train_tfidf, y_train)\n","nb_count.fit(X_train_count, y_train)\n","nb_glove.fit(X_train_glove, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"CzUWoo7_HmOf","executionInfo":{"status":"ok","timestamp":1718777476807,"user_tz":-330,"elapsed":478,"user":{"displayName":"Sohan","userId":"00013129391305470303"}},"outputId":"a3c406e0-86a7-409f-dd47-6505143e6eec"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GaussianNB()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GaussianNB</label><div class=\"sk-toggleable__content\"><pre>GaussianNB()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# Make Predictions and Evaluate\n","y_pred_tfidf = nb_tfidf.predict(X_test_tfidf)\n","y_pred_count = nb_count.predict(X_test_count)\n","y_pred_glove = nb_glove.predict(X_test_glove)\n","\n","accuracy_tfidf = accuracy_score(y_test, y_pred_tfidf)\n","accuracy_count = accuracy_score(y_test, y_pred_count)\n","accuracy_glove = accuracy_score(y_test, y_pred_glove)\n","\n","report_tfidf = classification_report(y_test, y_pred_tfidf)\n","report_count = classification_report(y_test, y_pred_count)\n","report_glove = classification_report(y_test, y_pred_glove)\n","\n","print(f'TF-IDF Accuracy: {accuracy_tfidf}')\n","print('TF-IDF Classification Report:')\n","print(report_tfidf)\n","\n","print(f'Count Vectorization Accuracy: {accuracy_count}')\n","print('Count Vectorization Classification Report:')\n","print(report_count)\n","\n","print(f'GloVe Accuracy: {accuracy_glove}')\n","print('GloVe Classification Report:')\n","print(report_glove)"],"metadata":{"id":"wKQrX7Z1HvIh","executionInfo":{"status":"ok","timestamp":1718777494509,"user_tz":-330,"elapsed":1322,"user":{"displayName":"Sohan","userId":"00013129391305470303"}},"outputId":"2f3deca1-f320-45c5-c9bd-841d1f61ae46","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["TF-IDF Accuracy: 0.8835920177383592\n","TF-IDF Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.97      0.79      0.87      1341\n","           1       0.80      0.99      0.88      1980\n","           2       0.99      0.82      0.90      1189\n","\n","    accuracy                           0.88      4510\n","   macro avg       0.92      0.86      0.88      4510\n","weighted avg       0.90      0.88      0.88      4510\n","\n","Count Vectorization Accuracy: 0.8226164079822617\n","Count Vectorization Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.92      0.81      0.86      1341\n","           1       0.73      0.98      0.84      1980\n","           2       1.00      0.58      0.73      1189\n","\n","    accuracy                           0.82      4510\n","   macro avg       0.88      0.79      0.81      4510\n","weighted avg       0.86      0.82      0.82      4510\n","\n","GloVe Accuracy: 0.48270509977827053\n","GloVe Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.50      0.35      0.41      1341\n","           1       0.53      0.46      0.49      1980\n","           2       0.43      0.68      0.53      1189\n","\n","    accuracy                           0.48      4510\n","   macro avg       0.49      0.49      0.48      4510\n","weighted avg       0.49      0.48      0.48      4510\n","\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"NCZtr_iyHzRo"},"execution_count":null,"outputs":[]}]}